MEMORY {
    ZP:         start = $10,    size = $f0,   type = rw, file = "";
    SHORTRAM:   start = $0100,  size = $00a0, type = rw, file = "";
    IRQCODE:    start = $01a0,  size = $0020, type = rw, file = "";
    STACK:      start = $01c0,  size = $0040, type = rw, file = "";
    OAM:        start = $0200,  size = $0100, type = rw, file = "";
    BUF:        start = $0300,  size = $0100, type = rw, file = "";
    RAM:        start = $0400,  size = $0400, type = rw, file = "";
    HDR:        start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_00:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_01:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_02:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_03:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_04:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_05:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_06:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_07:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_08:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_09:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_0a:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_0b:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_0c:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_0d:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_0e:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_0f:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_10:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_11:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_12:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_13:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_14:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_15:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_16:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_17:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_18:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_19:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_1a:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_1b:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_1c:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_1d:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_1e:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_1f:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_20:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_21:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_22:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_23:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_24:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_25:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_26:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_27:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_28:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_29:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_2a:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_2b:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_2c:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_2d:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_2e:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_2f:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_30:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_31:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_32:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_33:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_34:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_35:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_36:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_37:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_38:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_39:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_3a:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_3b:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_3c:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_3d:         start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_3e:         start = $c000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    BANK_3f:         start = $8000,  size = $1c00, type = ro, file = %O, fill = yes, fillval = $00;
    FIXED_BANK_3f:   start = $fc00,  size = $0400, type = ro, file = %O, fill = yes, fillval = $00;
}

SEGMENTS {
    ZEROPAGE:     load = ZP,       type = zp;
    SHORTRAM:     load = SHORTRAM, type = bss;
    SAMPLE_BUF:   load = BUF,      type = bss;
    OAM:          load = OAM,      type = bss;
    BSS:          load = RAM,      type = bss;
    HEADER:       load = HDR,      type = ro;
    
    BANK_00: load = BANK_00, type = ro;
    BANK_01: load = BANK_01, type = ro, optional = yes;
    BANK_02: load = BANK_02, type = ro, optional = yes;
    BANK_03: load = BANK_03, type = ro, optional = yes;
    BANK_04: load = BANK_04, type = ro, optional = yes;
    BANK_05: load = BANK_05, type = ro, optional = yes;
    BANK_06: load = BANK_06, type = ro, optional = yes;
    BANK_07: load = BANK_07, type = ro, optional = yes;
    BANK_08: load = BANK_08, type = ro, optional = yes;
    BANK_09: load = BANK_09, type = ro, optional = yes;
    BANK_0a: load = BANK_0a, type = ro, optional = yes;
    BANK_0b: load = BANK_0b, type = ro, optional = yes;
    BANK_0c: load = BANK_0c, type = ro, optional = yes;
    BANK_0d: load = BANK_0d, type = ro, optional = yes;
    BANK_0e: load = BANK_0e, type = ro, optional = yes;
    BANK_0f: load = BANK_0f, type = ro, optional = yes;
    BANK_10: load = BANK_10, type = ro, optional = yes;
    BANK_11: load = BANK_11, type = ro, optional = yes;
    BANK_12: load = BANK_12, type = ro, optional = yes;
    BANK_13: load = BANK_13, type = ro, optional = yes;
    BANK_14: load = BANK_14, type = ro, optional = yes;
    BANK_15: load = BANK_15, type = ro, optional = yes;
    BANK_16: load = BANK_16, type = ro, optional = yes;
    BANK_17: load = BANK_17, type = ro, optional = yes;
    BANK_18: load = BANK_18, type = ro, optional = yes;
    BANK_19: load = BANK_19, type = ro, optional = yes;
    BANK_1a: load = BANK_1a, type = ro, optional = yes;
    BANK_1b: load = BANK_1b, type = ro, optional = yes;
    BANK_1c: load = BANK_1c, type = ro, optional = yes;
    BANK_1d: load = BANK_1d, type = ro, optional = yes;
    BANK_1e: load = BANK_1e, type = ro, optional = yes;
    BANK_1f: load = BANK_1f, type = ro, optional = yes;
    BANK_20: load = BANK_20, type = ro, optional = yes;
    BANK_21: load = BANK_21, type = ro, optional = yes;
    BANK_22: load = BANK_22, type = ro, optional = yes;
    BANK_23: load = BANK_23, type = ro, optional = yes;
    BANK_24: load = BANK_24, type = ro, optional = yes;
    BANK_25: load = BANK_25, type = ro, optional = yes;
    BANK_26: load = BANK_26, type = ro, optional = yes;
    BANK_27: load = BANK_27, type = ro, optional = yes;
    BANK_28: load = BANK_28, type = ro, optional = yes;
    BANK_29: load = BANK_29, type = ro, optional = yes;
    BANK_2a: load = BANK_2a, type = ro, optional = yes;
    BANK_2b: load = BANK_2b, type = ro, optional = yes;
    BANK_2c: load = BANK_2c, type = ro, optional = yes;
    BANK_2d: load = BANK_2d, type = ro, optional = yes;
    BANK_2e: load = BANK_2e, type = ro, optional = yes;
    BANK_2f: load = BANK_2f, type = ro, optional = yes;
    BANK_30: load = BANK_30, type = ro, optional = yes;
    BANK_31: load = BANK_31, type = ro, optional = yes;
    BANK_32: load = BANK_32, type = ro, optional = yes;
    BANK_33: load = BANK_33, type = ro, optional = yes;
    BANK_34: load = BANK_34, type = ro, optional = yes;
    BANK_35: load = BANK_35, type = ro, optional = yes;
    BANK_36: load = BANK_36, type = ro, optional = yes;
    BANK_37: load = BANK_37, type = ro, optional = yes;
    BANK_38: load = BANK_38, type = ro, optional = yes;
    BANK_39: load = BANK_39, type = ro, optional = yes;
    BANK_3a: load = BANK_3a, type = ro, optional = yes;
    BANK_3b: load = BANK_3b, type = ro, optional = yes;
    BANK_3c: load = BANK_3c, type = ro, optional = yes;
    BANK_3d: load = BANK_3d, type = ro, optional = yes;
    BANK_3f: load = BANK_3f, type = ro, optional = yes;
    
    PLAYBACK_CODE:  load = FIXED_BANK_3f,  type = rw, run = IRQCODE, define = yes;
    DECODE_UNROLL:  load = BANK_3e,        type = ro, align = $100, optional = yes;
    DECODE:         load = BANK_3e,        type = ro;
    DECODE_TABLES:  load = BANK_3e,        type = ro, align = $100;
    MAIN:           load = FIXED_BANK_3f,  type = ro;
    HDRS:           load = FIXED_BANK_3f,  type = ro;
    INIT:           load = FIXED_BANK_3f,  type = ro;
    VECTORS:        load = FIXED_BANK_3f,  type = ro,  start = $FFFA;

}

SYMBOLS {
    INES_MAPPER:    type = weak, value = 85;   # VRC7
    INES_MIRROR:    type = weak, value = 0;    # 0 = horiz, 1 = vert
    INES_SRAM:      type = weak, value = 0;    # no SRAM present
    INES_PRG_BANKS: type = weak, value = 32;   # 16 * 32 = 512 KiB PRG
    INES_CHR_BANKS: type = weak, value = 0;    #  8 *  0 = 0 KiB CHR
    
    MAPPER_VRC7:    type = weak, value = 1;
}
